---
- name: CVE-2024-3094 Check and Fix
  hosts: all_hosts
  gather_facts: no
  tasks:
    - name: Create results directory
      ansible.builtin.file:
        path: "./results"
        state: directory

    - name: Check which version of XZ is installed
      ansible.builtin.command: xz --version
      register: xz_version

    - name: Check if the version of XZ is vulnerable
      ansible.builtin.command: strings `which xz` | grep '5\.6\.[01]'
      register: xz_vulnerable_version
      ignore_errors: yes

    - name: Save disk usage to local file
      delegate_to: localhost
      run_once: true
      ansible.builtin.copy:
        content: "{{ xz_version.stdout }}"
        dest: "./results/{{ inventory_hostname }}_xz_version_results.txt"

    - name: Save memory usage to local file
      delegate_to: localhost
      run_once: true
      ansible.builtin.copy:
        content: "{{ xz_vulnerable_version.stdout }}"
        dest: "./results/{{ inventory_hostname }}_xz_vulnerable_version_results.txt"

    - name: Run JFrog program for more info
      ansible.builtin.command: ./cve-2024-3094-tools/cve-2024-3094-detector/cve-2024-3094-detector.sh | sed 's/\x1B\[[0-9;]*[mK]//g'
      register: cve_2024_3094_detector

    - name: Remove ANSI escape codes from the output
      ansible.builtin.set_fact:
        cleaned_output: "{{ cve_2024_3094_detector.stdout | regex_replace('\\x1B\\[[0-9;]*[mK]', '') }}"

    - name: Save JFrog program output to local file
      delegate_to: localhost
      run_once: true
      ansible.builtin.copy:
        content: "{{ cleaned_output }}"
        dest: "./results/{{ inventory_hostname }}_cve_2024_3094_detector_results.txt"